import .bootstrap .cell

| TODO:
| This code will need to be different for different OS.
| Needs a #if -like language feature.
| Currently only works on 64-bit linux.

u-long alias
	nat
u-long-long alias
	nat
u-int alias
	nat32
s-long alias
	int
s-long-long alias
	int
dev-t alias
	u-long-long
ino-t alias
	u-long
mode-t alias
	u-int
nlink-t alias
	u-int
uid-t alias
	u-long
gid-t alias
	u-long
off-t alias
	s-long-long
blksize-t alias
	u-long
blkcnt-t alias
	u-long
time-t alias
	u-long

pthread-t alias
	u-long

| writes to `thread`
| attr -- not typing this as currently I only pass null
pthread-create err-t(thread cell pthread-t, attr any-ptr, start-routine fun-ptr1 any-ptr any-ptr, arg any-ptr) unsafe extern

| writes to `thread-return`
pthread-join err-t(thread pthread-t, thread-return cell any-ptr) unsafe extern

pthread-yield err-t() unsafe extern

| based on my /usr/include/x86_64-linux-gnu/asm/stat.h `struct stat64`
stat-t record mut
	st-dev mut dev-t
	pad0 mut nat32
	st-ino-unused mut ino-t
	st-mode mut mode-t
	st-nlink mut nlink-t
	st-uid mut uid-t
	st-gid mut gid-t
	st-rdev mut dev-t
	pad1 mut nat32
	st-size mut off-t
	st-blksize mut blksize-t
	st-blocks mut blkcnt-t
	st-atime mut time-t
	st-atime-nsec mut u-long
	st-mtime mut time-t
	st-mtime-nsec mut u-long
	st-ctime mut time-t
	st-ctime-msec mut u-long
	st-ino mut u-long-long
	unused mut u-long-long

err-t alias
	int32

enoent err-t() noctx
	two
eagain err-t() noctx
	ten wrap-add one
einval err-t() noctx
	ten wrap-add ten wrap-add two
esrch err-t() noctx
	three

get-errno err-t() summon builtin

stat int32(path c-str, buf stat-t) extern

get-stat opt stat-t(path c-str) summon trusted
	z3 = zero as<nat32>
	z = zero as<u-long>
	s = new<stat-t> z, z3, z, z3, z3, z, z, z, z3, zero, z, z, z, z, z, z, z, z, z, z
	err = path stat s
	when
		err == zero
			s some
		else
			assert: err == neg-one
			errno = get-errno
			when
				errno == enoent
					none
				else
					todo

s-ifmt nat32()
	| TODO: "octal170000"
	twelve.two-pow wrap-mul fifteen

s-ifdir nat32()
	| TODO: "octal40000"
	fourteen.two-pow

s-ifreg nat32()
	| TODO: "octal100000"
	fifteen.two-pow
