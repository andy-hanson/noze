import .bootstrap

cell<?t> record mut
	value mut ?t

as-cell cell ?t(p ptr ?t) noctx unsafe
	p.as-any-ptr as-ref

new-cell cell ?t(value ?t)
	new value

get ?t(c cell ?t) noctx
	c.value

set void(c cell ?t, v ?t) noctx
	c.value := v

swap ?t(c cell ?t, v ?t) noctx
	res = c get
	c set v
	res

| TODO: GENERIC
get-and-incr nat(c cell nat)
	res = c get
	c set: res incr
	res

cell-incr void(c cell nat)
	c.get-and-incr drop

cell-add void(c cell nat, n nat)
	c set: c.get + n

